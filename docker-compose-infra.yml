version: "2.2"

services:
  nats:
    image: nats:2.5
    ports:
      - "4222:4222"
      - "8222:8222"
      - "6222:6222"

  postgresql_user:
    image: postgres:13
    environment:
      POSTGRES_USER: ${USERS_DB_USER}
      POSTGRES_PASSWORD: ${USERS_DB_PASS}
      POSTGRES_DB: ${USERS_DB_NAME}
    expose:
      - "${USERS_DB_PORT}"
    ports:
      - "${USERS_DB_PORT}:${USERS_DB_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${USERS_DB_USER} -d ${USERS_DB_NAME} -p ${USERS_DB_PORT}" ]
      interval: 10s
      timeout: 5s
      retries: 3
    command: [ "postgres", "-c", "log_statement=all", "-p", "${USERS_DB_PORT}" ]
    volumes:
      - pgdata_users:/var/lib/postgresql/data

  postgresql_post:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTS_DB_USER}
      POSTGRES_PASSWORD: ${POSTS_DB_PASS}
      POSTGRES_DB: ${POSTS_DB_NAME}
    expose:
      - "${POSTS_DB_PORT}"
    ports:
      - "${POSTS_DB_PORT}:${POSTS_DB_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTS_DB_USER} -d ${POSTS_DB_NAME} -p ${POSTS_DB_PORT}" ]
      interval: 10s
      timeout: 5s
      retries: 3
    command: [ "postgres", "-c", "log_statement=all", "-p", "${POSTS_DB_PORT}" ]
    volumes:
      - pgdata_posts:/var/lib/postgresql/data

  caddy:
    image: caddy:2.6.2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./caddy/local/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config


volumes:
  pgdata_posts:
  pgdata_users:
  caddy_data:
    external: true
  caddy_config:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.59.0/24
