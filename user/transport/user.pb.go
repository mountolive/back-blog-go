// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transport/user.proto

package transport

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserResponse struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string               `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Username             string               `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	FirstName            string               `protobuf:"bytes,4,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName             string               `protobuf:"bytes,5,opt,name=lastName,proto3" json:"lastName,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UserResponse) Reset()         { *m = UserResponse{} }
func (m *UserResponse) String() string { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()    {}
func (*UserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fa1ee495e6d9f92, []int{0}
}

func (m *UserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResponse.Unmarshal(m, b)
}
func (m *UserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResponse.Marshal(b, m, deterministic)
}
func (m *UserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResponse.Merge(m, src)
}
func (m *UserResponse) XXX_Size() int {
	return xxx_messageInfo_UserResponse.Size(m)
}
func (m *UserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserResponse proto.InternalMessageInfo

func (m *UserResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserResponse) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *UserResponse) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *UserResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *UserResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

// Empty response for ChangePassword
type ChangePasswordResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordResponse) Reset()         { *m = ChangePasswordResponse{} }
func (m *ChangePasswordResponse) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordResponse) ProtoMessage()    {}
func (*ChangePasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fa1ee495e6d9f92, []int{1}
}

func (m *ChangePasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordResponse.Unmarshal(m, b)
}
func (m *ChangePasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordResponse.Marshal(b, m, deterministic)
}
func (m *ChangePasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordResponse.Merge(m, src)
}
func (m *ChangePasswordResponse) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordResponse.Size(m)
}
func (m *ChangePasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordResponse proto.InternalMessageInfo

// Empty response for CheckUser
type CheckUserResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUserResponse) Reset()         { *m = CheckUserResponse{} }
func (m *CheckUserResponse) String() string { return proto.CompactTextString(m) }
func (*CheckUserResponse) ProtoMessage()    {}
func (*CheckUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fa1ee495e6d9f92, []int{2}
}

func (m *CheckUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUserResponse.Unmarshal(m, b)
}
func (m *CheckUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUserResponse.Marshal(b, m, deterministic)
}
func (m *CheckUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserResponse.Merge(m, src)
}
func (m *CheckUserResponse) XXX_Size() int {
	return xxx_messageInfo_CheckUserResponse.Size(m)
}
func (m *CheckUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserResponse proto.InternalMessageInfo

type CreateUserRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	RepeatedPassword     string   `protobuf:"bytes,4,opt,name=repeatedPassword,proto3" json:"repeatedPassword,omitempty"`
	FirstName            string   `protobuf:"bytes,5,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName             string   `protobuf:"bytes,6,opt,name=lastName,proto3" json:"lastName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserRequest) Reset()         { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()    {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fa1ee495e6d9f92, []int{3}
}

func (m *CreateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserRequest.Unmarshal(m, b)
}
func (m *CreateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserRequest.Marshal(b, m, deterministic)
}
func (m *CreateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest.Merge(m, src)
}
func (m *CreateUserRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserRequest.Size(m)
}
func (m *CreateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest proto.InternalMessageInfo

func (m *CreateUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *CreateUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreateUserRequest) GetRepeatedPassword() string {
	if m != nil {
		return m.RepeatedPassword
	}
	return ""
}

func (m *CreateUserRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *CreateUserRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type UpdateUserRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=lastName,proto3" json:"lastName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserRequest) Reset()         { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()    {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fa1ee495e6d9f92, []int{4}
}

func (m *UpdateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest.Unmarshal(m, b)
}
func (m *UpdateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest.Merge(m, src)
}
func (m *UpdateUserRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest.Size(m)
}
func (m *UpdateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest proto.InternalMessageInfo

func (m *UpdateUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UpdateUserRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *UpdateUserRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type ChangePasswordRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordRequest) Reset()         { *m = ChangePasswordRequest{} }
func (m *ChangePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordRequest) ProtoMessage()    {}
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fa1ee495e6d9f92, []int{5}
}

func (m *ChangePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordRequest.Unmarshal(m, b)
}
func (m *ChangePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordRequest.Marshal(b, m, deterministic)
}
func (m *ChangePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordRequest.Merge(m, src)
}
func (m *ChangePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordRequest.Size(m)
}
func (m *ChangePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordRequest proto.InternalMessageInfo

func (m *ChangePasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ChangePasswordRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ChangePasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CheckUserRequest struct {
	Login                string   `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUserRequest) Reset()         { *m = CheckUserRequest{} }
func (m *CheckUserRequest) String() string { return proto.CompactTextString(m) }
func (*CheckUserRequest) ProtoMessage()    {}
func (*CheckUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fa1ee495e6d9f92, []int{6}
}

func (m *CheckUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckUserRequest.Unmarshal(m, b)
}
func (m *CheckUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckUserRequest.Marshal(b, m, deterministic)
}
func (m *CheckUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserRequest.Merge(m, src)
}
func (m *CheckUserRequest) XXX_Size() int {
	return xxx_messageInfo_CheckUserRequest.Size(m)
}
func (m *CheckUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserRequest proto.InternalMessageInfo

func (m *CheckUserRequest) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func init() {
	proto.RegisterType((*UserResponse)(nil), "transport.UserResponse")
	proto.RegisterType((*ChangePasswordResponse)(nil), "transport.ChangePasswordResponse")
	proto.RegisterType((*CheckUserResponse)(nil), "transport.CheckUserResponse")
	proto.RegisterType((*CreateUserRequest)(nil), "transport.CreateUserRequest")
	proto.RegisterType((*UpdateUserRequest)(nil), "transport.UpdateUserRequest")
	proto.RegisterType((*ChangePasswordRequest)(nil), "transport.ChangePasswordRequest")
	proto.RegisterType((*CheckUserRequest)(nil), "transport.CheckUserRequest")
}

func init() {
	proto.RegisterFile("transport/user.proto", fileDescriptor_6fa1ee495e6d9f92)
}

var fileDescriptor_6fa1ee495e6d9f92 = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0xcf, 0xae, 0x93, 0x40,
	0x14, 0xc6, 0x85, 0xdb, 0xe2, 0xe5, 0x5c, 0x6d, 0xda, 0xb1, 0x2a, 0xc1, 0x26, 0x56, 0x56, 0x8d,
	0x0b, 0x48, 0xea, 0xc6, 0x6d, 0xed, 0xc6, 0x95, 0x31, 0x8d, 0x8d, 0x89, 0xbb, 0x69, 0x99, 0x52,
	0x22, 0x30, 0x38, 0x33, 0xc4, 0xa5, 0x8f, 0xe4, 0x63, 0xf8, 0x56, 0xc6, 0x30, 0x30, 0x53, 0xa6,
	0xad, 0xb8, 0x30, 0x77, 0x79, 0xce, 0x77, 0xbe, 0xf3, 0xe7, 0x37, 0x00, 0x53, 0xc1, 0x70, 0xc1,
	0x4b, 0xca, 0x44, 0x54, 0x71, 0xc2, 0xc2, 0x92, 0x51, 0x41, 0x91, 0xab, 0xb3, 0xfe, 0xcb, 0x84,
	0xd2, 0x24, 0x23, 0x91, 0x14, 0x76, 0xd5, 0x21, 0x12, 0x69, 0x4e, 0xb8, 0xc0, 0x79, 0xd9, 0xd4,
	0x06, 0xbf, 0x2d, 0x78, 0xb4, 0xe5, 0x84, 0x6d, 0x08, 0x2f, 0x69, 0xc1, 0x09, 0x1a, 0x81, 0x9d,
	0xc6, 0x9e, 0x35, 0xb7, 0x16, 0xee, 0xc6, 0x4e, 0x63, 0x34, 0x85, 0x21, 0xc9, 0x71, 0x9a, 0x79,
	0xb6, 0x4c, 0x35, 0x01, 0xf2, 0xe1, 0xb6, 0x1e, 0x58, 0xe0, 0x9c, 0x78, 0x37, 0x52, 0xd0, 0x31,
	0x9a, 0x81, 0x7b, 0x48, 0x19, 0x17, 0x1f, 0x6a, 0x71, 0x20, 0xc5, 0x53, 0xa2, 0x76, 0x66, 0xb8,
	0x15, 0x87, 0x8d, 0x53, 0xc5, 0xe8, 0x2d, 0xb8, 0x7b, 0x46, 0xb0, 0x20, 0xf1, 0x4a, 0x78, 0xce,
	0xdc, 0x5a, 0xdc, 0x2d, 0xfd, 0xb0, 0xb9, 0x20, 0x54, 0x17, 0x84, 0x9f, 0xd4, 0x05, 0x9b, 0x53,
	0x71, 0xed, 0xac, 0xca, 0xb8, 0x75, 0x3e, 0xfc, 0xb7, 0x53, 0x17, 0x07, 0x1e, 0x3c, 0x5b, 0x1f,
	0x71, 0x91, 0x90, 0x8f, 0x98, 0xf3, 0xef, 0x94, 0xc5, 0x8a, 0x44, 0xf0, 0x04, 0x26, 0xeb, 0x23,
	0xd9, 0x7f, 0xed, 0xe2, 0x09, 0x7e, 0x59, 0x30, 0x59, 0xcb, 0xb1, 0x4d, 0xfa, 0x5b, 0x45, 0xb8,
	0x38, 0x41, 0xb2, 0xfe, 0x06, 0xc9, 0x3e, 0x83, 0xe4, 0xc3, 0x6d, 0xd9, 0x0e, 0x54, 0x00, 0x55,
	0x8c, 0x5e, 0xc3, 0x98, 0x91, 0x52, 0x9e, 0xa6, 0x96, 0x6a, 0x39, 0x5e, 0xe4, 0x4d, 0xd8, 0xc3,
	0x3e, 0xd8, 0x8e, 0x09, 0x3b, 0xf8, 0x01, 0x93, 0xad, 0xa4, 0xf0, 0x7f, 0x87, 0x18, 0x0b, 0xdc,
	0xf4, 0x2d, 0x30, 0x38, 0x5b, 0x80, 0xc0, 0xd3, 0x73, 0xf2, 0xf7, 0x40, 0x33, 0x58, 0xc0, 0xb8,
	0xf3, 0x8c, 0x7a, 0x42, 0x46, 0x93, 0xb4, 0x50, 0x13, 0x64, 0xb0, 0xfc, 0x69, 0xc3, 0xa0, 0xae,
	0x42, 0x2b, 0x70, 0x9a, 0x37, 0x46, 0xb3, 0x50, 0xff, 0x4b, 0xe1, 0xc5, 0xb3, 0xfb, 0xcf, 0x3b,
	0xaa, 0xf1, 0x95, 0x3c, 0xa8, 0x5b, 0x34, 0x74, 0x8d, 0x16, 0x17, 0xc0, 0xfb, 0x5a, 0x7c, 0x86,
	0x91, 0xc9, 0x07, 0xcd, 0xbb, 0xdb, 0x5c, 0x43, 0xe7, 0xbf, 0xea, 0xa9, 0xd0, 0x8d, 0xdf, 0x83,
	0xab, 0x89, 0xa0, 0x17, 0x86, 0xc3, 0xe4, 0xe4, 0xcf, 0xae, 0x8b, 0xaa, 0xd3, 0xbb, 0xc7, 0x5f,
	0xee, 0xc2, 0x48, 0x97, 0xec, 0x1c, 0xf9, 0xab, 0xbd, 0xf9, 0x13, 0x00, 0x00, 0xff, 0xff, 0x5d,
	0x40, 0x78, 0xb9, 0x97, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	Create(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*UserResponse, error)
	Update(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UserResponse, error)
	ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*ChangePasswordResponse, error)
	CheckUser(ctx context.Context, in *CheckUserRequest, opts ...grpc.CallOption) (*CheckUserResponse, error)
}

type userClient struct {
	cc grpc.ClientConnInterface
}

func NewUserClient(cc grpc.ClientConnInterface) UserClient {
	return &userClient{cc}
}

func (c *userClient) Create(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/transport.User/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Update(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/transport.User/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*ChangePasswordResponse, error) {
	out := new(ChangePasswordResponse)
	err := c.cc.Invoke(ctx, "/transport.User/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) CheckUser(ctx context.Context, in *CheckUserRequest, opts ...grpc.CallOption) (*CheckUserResponse, error) {
	out := new(CheckUserResponse)
	err := c.cc.Invoke(ctx, "/transport.User/CheckUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	Create(context.Context, *CreateUserRequest) (*UserResponse, error)
	Update(context.Context, *UpdateUserRequest) (*UserResponse, error)
	ChangePassword(context.Context, *ChangePasswordRequest) (*ChangePasswordResponse, error)
	CheckUser(context.Context, *CheckUserRequest) (*CheckUserResponse, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) Create(ctx context.Context, req *CreateUserRequest) (*UserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedUserServer) Update(ctx context.Context, req *UpdateUserRequest) (*UserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedUserServer) ChangePassword(ctx context.Context, req *ChangePasswordRequest) (*ChangePasswordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassword not implemented")
}
func (*UnimplementedUserServer) CheckUser(ctx context.Context, req *CheckUserRequest) (*CheckUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUser not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.User/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Create(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.User/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Update(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.User/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).ChangePassword(ctx, req.(*ChangePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_CheckUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).CheckUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.User/CheckUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).CheckUser(ctx, req.(*CheckUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _User_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _User_Update_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _User_ChangePassword_Handler,
		},
		{
			MethodName: "CheckUser",
			Handler:    _User_CheckUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transport/user.proto",
}
